// Mocks generated by Mockito 5.4.2 from annotations
// in avantswift_portfolio/test/view_pages/about_me_section_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:avantswift_portfolio/controllers/view_controllers/about_me_section_controller.dart'
    as _i5;
import 'package:avantswift_portfolio/models/User.dart' as _i3;
import 'package:avantswift_portfolio/reposervice/user_repo_services.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeUserRepoService_0 extends _i1.SmartFake
    implements _i2.UserRepoService {
  _FakeUserRepoService_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [User].
///
/// See the documentation for Mockito's code generation for more information.
class MockUser extends _i1.Mock implements _i3.User {
  MockUser() {
    _i1.throwOnMissingStub(this);
  }

  @override
  set name(String? _name) => super.noSuchMethod(
        Invocation.setter(
          #name,
          _name,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set nickname(String? _nickname) => super.noSuchMethod(
        Invocation.setter(
          #nickname,
          _nickname,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set landingPageDescription(String? _landingPageDescription) =>
      super.noSuchMethod(
        Invocation.setter(
          #landingPageDescription,
          _landingPageDescription,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set imageURL(String? _imageURL) => super.noSuchMethod(
        Invocation.setter(
          #imageURL,
          _imageURL,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set aboutMeURL(String? _aboutMeURL) => super.noSuchMethod(
        Invocation.setter(
          #aboutMeURL,
          _aboutMeURL,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set contactEmail(String? _contactEmail) => super.noSuchMethod(
        Invocation.setter(
          #contactEmail,
          _contactEmail,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set linkedinURL(String? _linkedinURL) => super.noSuchMethod(
        Invocation.setter(
          #linkedinURL,
          _linkedinURL,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set aboutMe(String? _aboutMe) => super.noSuchMethod(
        Invocation.setter(
          #aboutMe,
          _aboutMe,
        ),
        returnValueForMissingStub: null,
      );
  @override
  Map<String, dynamic> toMap() => (super.noSuchMethod(
        Invocation.method(
          #toMap,
          [],
        ),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);
  @override
  _i4.Future<void> create() => (super.noSuchMethod(
        Invocation.method(
          #create,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
  @override
  _i4.Future<void> delete() => (super.noSuchMethod(
        Invocation.method(
          #delete,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}

/// A class which mocks [AboutMeSectionController].
///
/// See the documentation for Mockito's code generation for more information.
class MockAboutMeSectionController extends _i1.Mock
    implements _i5.AboutMeSectionController {
  MockAboutMeSectionController() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.UserRepoService get userRepoService => (super.noSuchMethod(
        Invocation.getter(#userRepoService),
        returnValue: _FakeUserRepoService_0(
          this,
          Invocation.getter(#userRepoService),
        ),
      ) as _i2.UserRepoService);
}
